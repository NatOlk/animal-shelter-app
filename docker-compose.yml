version: '3.8'

services:
  redis-ansh:
    image: redis:latest
    env_file:
      - .env
    hostname: localhost
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  zookeeper-ansh:
    image: confluentinc/cp-zookeeper:7.2.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - backend

  kafka-ansh:
    image: confluentinc/cp-kafka:7.2.2
    depends_on:
      - zookeeper-ansh
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-ansh:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-ansh:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - backend

  postgres-animal-shelter:
    image: postgres:13
    environment:
      POSTGRES_DB: Animal_Shelter
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--auth-local=trust"
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend
      - db

  postgres-animal-shelter-notification:
    image: postgres:13
    environment:
      POSTGRES_DB: animal_shelter_notification
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_NOTIFICATION}
      POSTGRES_INITDB_ARGS: "--auth-local=trust"
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend
      - db

  ansh-notification-service:
    build:
      context: ./ansh-notification-service
      dockerfile: Dockerfile
    depends_on:
      redis-ansh:
        condition: service_healthy
      postgres-animal-shelter-notification:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8444:8444"
      - "5006:5006"
    volumes:
      - ./ansh-notification-service:/app
      - ./nginx/keystore.p12:/app/keystore.p12
      - ./nginx/truststore.p12:/app/truststore.p12
    environment:
      JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStore=/app/truststore.p12 -Dserver.ssl.key-store=file:/app/keystore.p12 -Djavax.net.ssl.trustStorePassword=BerlinApril2025 -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006"
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-animal-shelter-notification:5432/animal_shelter_notification
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD_NOTIFICATION}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_NOTIFICATION}
      POSTGRES_DB: animal_shelter_notification
      SPRING_REDIS_HOST: redis-ansh
      SPRING_REDIS_PORT: 6379
      SPRING_MAIL_HOST: smtp.gmail.com
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_USERNAME: ${GMAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${GMAIL_PASSWORD}
      SSL_KEY_STORE_PASSWORD: ${SSL_KEY_STORE_PASSWORD}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_TRUST: smtp.gmail.com
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: true
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: true
      ANIMAL_SHELTER_NOTIFICATION_APP: https://localhost:8444
      ANIMAL_SHELTER_APP: http://localhost:8080
    networks:
      - backend

  ansh-service:
    build:
      context: ./ansh-service
      dockerfile: Dockerfile
    depends_on:
      postgres-animal-shelter:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8443:8443"
      - "5005:5005"
    volumes:
      - ./ansh-service:/app
      - ./nginx/keystore.p12:/app/keystore.p12
      - ./nginx/truststore.p12:/app/truststore.p12
    environment:
      JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStore=/app/truststore.p12 -Dserver.ssl.key-store=file:/app/keystore.p12 -Djavax.net.ssl.trustStorePassword=BerlinApril2025 -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka-ansh:9092
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-animal-shelter:5432/Animal_Shelter
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: Animal_Shelter
      SPRING_PROFILES_ACTIVE: init-user
      SSL_KEY_STORE_PASSWORD: ${SSL_KEY_STORE_PASSWORD}
      ANIMAL_SHELTER_NOTIFICATION_APP: https://nginx-proxy-ansh/ansh/notification
      ANIMAL_SHELTER_APP: http://localhost:8080
    networks:
      - backend

  ansh-react-app:
    build:
      context: ./animals-shelter-react
      dockerfile: Dockerfile
    command: >
      sh -c "npx tailwindcss -c tailwind.config.js 
      -i ./src/styles/global.css 
      -o ./src/output.css --watch & npm start"
    ports:
      - "3000:3000"
    environment:
      - HTTPS=true
      - SSL_CRT_FILE=/etc/nginx/cert.crt
      - SSL_KEY_FILE=/etc/nginx/cert.key
    networks:
      - frontend
      - backend

  nginx-proxy-ansh:
    image: nginx:1.21.6-alpine
    volumes:
      - ./animals-shelter-react/build:/usr/share/nginx/html
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/cert.crt:/etc/nginx/cert.crt
      - ./nginx/cert.key:/etc/nginx/cert.key
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - ansh-service
      - ansh-notification-service
      - ansh-react-app
    networks:
      - backend
      - frontend

networks:
  backend:
    driver: bridge
  db:
    driver: bridge
  frontend:
    driver: bridge

version: '3.8'
services:

  redis:
    image: redis:latest
    env_file:
      - .env
    hostname: localhost
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - backend

  ansh-notification-kafka:
    image: confluentinc/cp-kafka:7.2.2
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://ansh-notification-kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - backend

  postgres-animal-shelter:
    image: postgres:13
    environment:
      POSTGRES_DB: Animal_Shelter
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--auth-local=trust"
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend
      - db

  postgres-animal-shelter-notification:
    image: postgres:13
    environment:
      POSTGRES_DB: animal_shelter_notification
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_NOTIFICATION}
      POSTGRES_INITDB_ARGS: "--auth-local=trust"
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend
      - db

  ansh-notification-service:
    build:
      context: ./ansh-notification-service
      dockerfile: Dockerfile
    depends_on:
      redis:
        condition: service_healthy
      postgres-animal-shelter-notification:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8081:8081"
      - "5006:5006"
    environment:
      JAVA_TOOL_OPTIONS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-animal-shelter-notification:5432/animal_shelter_notification
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD_NOTIFICATION}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_NOTIFICATION}
      POSTGRES_DB: animal_shelter_notification
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      ANIMAL_SHELTER_NOTIFICATION_APP: http://localhost:8081
      ANIMAL_SHELTER_REACT_APP: http://localhost:3000
      ANIMAL_SHELTER_APP: http://localhost:8080
    volumes:
      - ./ansh-notification-service:/app
    networks:
      - backend

  ansh-service:
    build:
      context: ./ansh-service
      dockerfile: Dockerfile
    depends_on:
      postgres-animal-shelter:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8080:8080"
      - "5005:5005"
    environment:
      JAVA_TOOL_OPTIONS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-animal-shelter:5432/Animal_Shelter
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: Animal_Shelter
      SPRING_MAIL_HOST: smtp.gmail.com
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_USERNAME: ${GMAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${GMAIL_PASSWORD}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: true
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: true
      SPRING_PROFILES_ACTIVE: init-user
      ANIMAL_SHELTER_NOTIFICATION_APP: http://ansh-notification-service:8081
      ANIMAL_SHELTER_REACT_APP: http://localhost:3000
      ANIMAL_SHELTER_APP: http://localhost:8080
    volumes:
      - ./ansh-service:/app
    networks:
      - backend

  ansh-react-app:
    build:
      context: ./animals-shelter-react
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - animals-shelter-react/.env
    volumes:
      - ./animals-shelter-react:/app
    networks:
      - frontend
      - backend

networks:
  backend:
    driver: bridge
  db:
    driver: bridge
  frontend:
    driver: bridge

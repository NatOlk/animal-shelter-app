## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5434/animal_shelter_notification
spring.datasource.password=${POSTGRES_PASSWORD}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# create and drop table, good for testing, production set to none or comment it
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.show-sql=true

spring.graphql.graphiql.enabled=true
spring.graphql.graphiql.path=/graphiql

spring.kafka.producer.bootstrap-servers=ansh-notification-kafka:9092
spring.kafka.consumer.bootstrap-servers=ansh-notification-kafka:9092
spring.kafka.consumer.group-id=animalGroupId
spring.kafka.bootstrap-servers=ansh-notification-kafka:9092

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${GMAIL_USERNAME}
spring.mail.password=${GMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

spring.data.redis.host=redis
spring.data.redis.port=6379
spring.data.redis.password=${REDIS_PASSWORD}
spring.cache.type=redis
spring.data.redis.repositories.enabled=false
management.endpoint.caches.enabled=true
management.endpoints.web.exposure.include=caches

server.port=8081

logging.level.root=INFO
logging.level.com.ansh.service=DEBUG

#application properties
animalTopicId=animalTopicId
subscriptionTopicId=subscriptionTopicId
approveTopicId=approveTopicId
notification.api.key=${NOTIFICATION_API_KEY}
animalShelterNotificationApp=http://localhost:8081
animalShelterApp=http://localhost:8080
animalShelterReactApp=http://localhost:3000
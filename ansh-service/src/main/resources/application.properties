## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5434/Animal_Shelter
spring.datasource.password=${POSTGRES_PASSWORD}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# create and drop table, good for testing, production set to none or comment it
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=none
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false

spring.graphql.graphiql.enabled=true
spring.graphql.graphiql.path=/graphiql

spring.kafka.producer.bootstrap-servers=kafka-ansh:9092
spring.kafka.consumer.bootstrap-servers=kafka-ansh:9092
spring.kafka.consumer.group-id=animalGroupId
spring.kafka.bootstrap-servers=kafka-ansh:9092

#logging.level.org.springframework=DEBUG
spring.profiles.active=init-user

# Security cookie settings
#server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=Strict

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

spring.web.resources.static-locations=file:/uploads/

hazelcast.host=ansh-hazelcast
hazelcast.port=5701
hazelcast.cluster.name=ansh-cluster
logging.level.com.hazelcast=DEBUG

# Circuit Breaker for Notification service
resilience4j.circuitbreaker.instances.notificationService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.notificationService.slowCallRateThreshold=50
resilience4j.circuitbreaker.instances.notificationService.slowCallDurationThreshold=2000ms
resilience4j.circuitbreaker.instances.notificationService.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.notificationService.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.notificationService.permittedNumberOfCallsInHalfOpenState=5
resilience4j.circuitbreaker.instances.notificationService.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.notificationService.slidingWindowSize=10

resilience4j.retry.instances.notificationRetry.maxAttempts=3
resilience4j.retry.instances.notificationRetry.waitDuration=2000ms
resilience4j.retry.instances.notificationRetry.retryExceptions=org.springframework.web.reactive.function.client.WebClientResponseException

logging.level.io.github.resilience4j.circuitbreaker=DEBUG

#HTTPS
server.port=8443

server.ssl.key-store=file:/app/keystore.p12
server.ssl.key-store-password=${SSL_KEY_STORE_PASSWORD}
server.ssl.key-store-type=PKCS12

#JWT
jwt.secret.key=${JWT_SECRET_KEY}
security.public-paths=/public/,/resources/,/uploads/,/actuator/,/swagger-ui,/v3/api-docs,/swagger-ui.html

logging.level.root=ERROR
logging.level.org.springframework=ERROR
logging.level.org.hibernate=ERROR

logging.level.com.ansh=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level [%thread] %logger{36} - %msg%n

app.admin.email=${GMAIL_USERNAME}

#application properties
notification.subscription.endpoint.all=/internal/subscription/all
notification.subscription.endpoint.statuses=/internal/subscription/statuses
notification.subscription.endpoint.register=/internal/subscription/register
notification.subscription.endpoint.unsubscribe=/internal/subscription/unsubscribe
animalShelterNewsTopicId=animalShelterNewsTopicId
animalTopicId=animalTopicId
vaccinationTopicId=vaccinationTopicId
subscriptionTopicId=subscriptionTopicId
approveTopicId=approveTopicId
notification.api.key=${NOTIFICATION_API_KEY}
app.genders=F,M
app.species=Cat,Dog,Hamster,Rabbit,Guinea Pig,Ferret,Parrot,Goldfish,Turtle,Snake,Lizard,Gerbil,Chinchilla,Horse
app.colors=White,Black,Red,Multi,Braun,Gold,Silver,Gray,Cream,Brown,Blue,Yellow,Orange
app.vaccines=Rabies,Distemper,Parvovirus,Adenovirus,Leptospirosis,Bordetella,Lyme Disease,Feline Herpesvirus,Feline Calicivirus,Feline Panleukopenia,Avian Influenza

app.animalShelterNotificationApp=${ANIMAL_SHELTER_NOTIFICATION_APP}
app.animalShelterApp=${ANIMAL_SHELTER_APP}
app.animalShelterReactApp=${ANIMAL_SHELTER_REACT_APP}
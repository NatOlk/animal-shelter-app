scalar Date
@specifiedBy(url:
  "https://tools.ietf.org/html/rfc3339"
 )

type Query {
    allAnimals : [AnimalDTO]
    animalById(id: ID!): AnimalDTO
    allVaccinations : [VaccinationDTO]
    vaccinationByAnimalId(animalId: ID!): [VaccinationDTO]
    vaccinationCountById(id: ID!): Int!
    currentUserProfile: UserProfile
}

type AnimalDTO {
    id: ID!
    name: String!
    species: String!
    primaryColor: String
    implantChipId: String
    breed: String
    gender: String
    admissionDate: Date!
    birthDate: Date!
    pattern: String
    vaccinations: [VaccinationDTO]
    vaccinationCount: Int
    photoImgPath: String
}

type VaccinationDTO {
    id: ID!
    vaccine: String!
    batch: String!
    vaccinationTime: Date!
    comments: String
    email: String!
    animal: AnimalDTO!
}

type UserProfile {
    id: ID!
    name: String!
    email: String!
    roles: [String!]
    animalNotifyStatus: String!
}

input AnimalInput {
    name: String!
    species: String!
    primaryColor: String!
    breed: String
    implantChipId: String
    gender: String!
    birthDate: Date!
    pattern: String
}

input UpdateAnimalInput {
    id: ID!
    primaryColor: String
    breed: String
    gender: String
    birthDate: Date
    pattern: String
    photoImgPath: String
}

input VaccinationInput {
    animalId: ID!
    vaccine: String!
    batch: String!
    vaccinationTime: Date!
    comments: String
    email: String!
}

input UpdateVaccinationInput {
    id: ID!
    vaccine: String
    batch: String
    vaccinationTime: Date
    comments: String
    email: String
}

type Mutation {
    addAnimal(animal: AnimalInput!) : AnimalDTO
    deleteAnimal(id: ID!, reason: String!) : AnimalDTO
    updateAnimal(animal: UpdateAnimalInput!) : AnimalDTO
    addVaccination(vaccination: VaccinationInput!) : VaccinationDTO
    deleteVaccination(id: ID!) : VaccinationDTO
    updateVaccination(vaccination: UpdateVaccinationInput!) : VaccinationDTO
}
